x-airflow-common: 
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.6.3-python3.9}
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__SCHEDULER__ENABLE_HEALTH_CHECK: 'true'
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
  volumes:
    - ./dags:/opt/airflow/dags:ro
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins:ro
  user: '${AIRFLOW_UID:-50000}:0'
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy

services:
  git-sync:
    build:
      context: ./git-sync
      dockerfile: Dockerfile
    container_name: git-sync
    environment:
      - GIT_REPO=<Your Git Repo name>
      - GIT_BRANCH=main
      - GIT_TYPE=gitlab
      - GIT_USER=<Your Git User>
      - TOKEN_NAME=<Your Token Name>
      - TOKEN=<Your Token>
      - SYNC_INTERVAL=60
      - TMP_DIR=/tmp/git-sync-tmp
      - TARGET_DIR=/dags
    volumes:
      - ./dags:/dags
    restart: always

  postgres:
    image: postgres:15.5
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - ./metadata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      <<: *airflow-common-depends-on

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      <<: *airflow-common-depends-on

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: ["-c", "exec /entrypoint airflow version"]
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    user: "0:0"
    volumes:
      - ${AIRFLOW_PROJ_DIR:-.}:/sources